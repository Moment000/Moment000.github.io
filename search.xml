<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c语言</title>
      <link href="/2021/11/19/C%E8%AF%AD%E8%A8%80/c%E8%AF%AD%E8%A8%80/"/>
      <url>/2021/11/19/C%E8%AF%AD%E8%A8%80/c%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法</title>
      <link href="/2021/11/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/11/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ElemType data[MaxSize];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125; SeqList;</span><br></pre></td></tr></table></figure><h1 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h1><h2 id="单链表的实现-–-删除"><a href="#单链表的实现-–-删除" class="headerlink" title="单链表的实现 – 删除"></a>单链表的实现 – 删除</h2><p>算法：Delete</p><blockquote><p>q=p-&gt;next;<br>p-&gt;next=q-&gt;next; </p></blockquote><p>算法描述</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete_linklist</span><span class="params">(Node *first,<span class="keyword">int</span> i,datatype *ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Node *p = first,*q;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;next &amp;&amp; count&lt;i<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//找到了i-1的位置</span></span><br><span class="line">    <span class="keyword">if</span>(count==i<span class="number">-1</span> &amp;&amp; p-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=p-&gt;next;</span><br><span class="line">        *ptr=q-&gt;data;</span><br><span class="line">        p-&gt;next=q-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>时间复杂度：<br>  好：O(1)<br>  坏：O(n)<br>  平均：O(n)</p></blockquote><h2 id="构造一个长度为n的单链表"><a href="#构造一个长度为n的单链表" class="headerlink" title="构造一个长度为n的单链表"></a>构造一个长度为n的单链表</h2><blockquote><p>s-&gt;next=p-&gt;next;<br>p-&gt;next=s;</p></blockquote><h3 id="1-头插法构造单链表（反序链表）"><a href="#1-头插法构造单链表（反序链表）" class="headerlink" title="1.头插法构造单链表（反序链表）"></a>1.头插法构造单链表（反序链表）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Node* <span class="title">create_linklist</span><span class="params">(<span class="keyword">int</span> n,datatype r[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Node *first,*s;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    first=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    first-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node))</span><br><span class="line">        s-&gt;data=r[i];</span><br><span class="line">        s-&gt;next=first-&gt;next;</span><br><span class="line">        first-&gt;next=s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> first;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>时间复杂度：<br>  T(n)=O(n)</p></blockquote><h3 id="2-尾插法构造单链表"><a href="#2-尾插法构造单链表" class="headerlink" title="2.尾插法构造单链表"></a>2.尾插法构造单链表</h3><p>时空转换法：<br>空间&lt;-&gt;时间<br>也就是用空间代替时间</p><blockquote><p>rear-&gt;next=s;</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Node* <span class="title">create_linklist</span><span class="params">(<span class="keyword">int</span> n,datatype r[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Node *first,*rear,*s;<span class="comment">//*rear尾指针</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    first=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">    rear=first;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=(Node *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">        s-&gt;data=r[<span class="number">0</span>];</span><br><span class="line">        rear-&gt;next=s;</span><br><span class="line">        rear=s;</span><br><span class="line">    &#125;</span><br><span class="line">    rear-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> first;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>时间复杂度<br>  T(n)=O(n)</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
